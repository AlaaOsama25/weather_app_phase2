
///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class WeatherForecastForecastdayHourCondition {
/*
{
  "text": "Clear",
  "icon": "//cdn.weatherapi.com/weather/64x64/night/113.png",
  "code": 1000
}
*/

  String? text;
  String? icon;
  int? code;

  WeatherForecastForecastdayHourCondition({
    this.text,
    this.icon,
    this.code,
  });
  WeatherForecastForecastdayHourCondition.fromJson(Map<String, dynamic> json) {
    text = json['text']?.toString();
    icon = json['icon']?.toString();
    code = json['code']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['text'] = text;
    data['icon'] = icon;
    data['code'] = code;
    return data;
  }
}

class WeatherForecastForecastdayHour {
/*
{
  "time_epoch": 1662501600,
  "time": "2022-09-07 00:00",
  "temp_c": 25.7,
  "temp_f": 78.3,
  "is_day": 0,
  "condition": {
    "text": "Clear",
    "icon": "//cdn.weatherapi.com/weather/64x64/night/113.png",
    "code": 1000
  },
  "wind_mph": 9.8,
  "wind_kph": 15.8,
  "wind_degree": 334,
  "wind_dir": "NNW",
  "pressure_mb": 1010,
  "pressure_in": 29.82,
  "precip_mm": 0,
  "precip_in": 0,
  "humidity": 66,
  "cloud": 9,
  "feelslike_c": 27.2,
  "feelslike_f": 81,
  "windchill_c": 25.7,
  "windchill_f": 78.3,
  "heatindex_c": 27.2,
  "heatindex_f": 81,
  "dewpoint_c": 18.9,
  "dewpoint_f": 66,
  "will_it_rain": 0,
  "chance_of_rain": 0,
  "will_it_snow": 0,
  "chance_of_snow": 0,
  "vis_km": 10,
  "vis_miles": 6,
  "gust_mph": 12.3,
  "gust_kph": 19.8,
  "uv": 1
}
*/

  int? timeEpoch;
  String? time;
  double? tempC;
  double? tempF;
  int? isDay;
  WeatherForecastForecastdayHourCondition? condition;
  double? windMph;
  double? windKph;
  int? windDegree;
  String? windDir;
  int? pressureMb;
  double? pressureIn;
  int? precipMm;
  int? precipIn;
  int? humidity;
  int? cloud;
  double? feelslikeC;
  int? feelslikeF;
  double? windchillC;
  double? windchillF;
  double? heatindexC;
  int? heatindexF;
  double? dewpointC;
  int? dewpointF;
  int? willItRain;
  int? chanceOfRain;
  int? willItSnow;
  int? chanceOfSnow;
  int? visKm;
  int? visMiles;
  double? gustMph;
  double? gustKph;
  int? uv;

  WeatherForecastForecastdayHour({
    this.timeEpoch,
    this.time,
    this.tempC,
    this.tempF,
    this.isDay,
    this.condition,
    this.windMph,
    this.windKph,
    this.windDegree,
    this.windDir,
    this.pressureMb,
    this.pressureIn,
    this.precipMm,
    this.precipIn,
    this.humidity,
    this.cloud,
    this.feelslikeC,
    this.feelslikeF,
    this.windchillC,
    this.windchillF,
    this.heatindexC,
    this.heatindexF,
    this.dewpointC,
    this.dewpointF,
    this.willItRain,
    this.chanceOfRain,
    this.willItSnow,
    this.chanceOfSnow,
    this.visKm,
    this.visMiles,
    this.gustMph,
    this.gustKph,
    this.uv,
  });
  WeatherForecastForecastdayHour.fromJson(Map<String, dynamic> json) {
    timeEpoch = json['time_epoch']?.toInt();
    time = json['time']?.toString();
    tempC = json['temp_c']?.toDouble();
    tempF = json['temp_f']?.toDouble();
    isDay = json['is_day']?.toInt();
    condition = (json['condition'] != null) ? WeatherForecastForecastdayHourCondition.fromJson(json['condition']) : null;
    windMph = json['wind_mph']?.toDouble();
    windKph = json['wind_kph']?.toDouble();
    windDegree = json['wind_degree']?.toInt();
    windDir = json['wind_dir']?.toString();
    pressureMb = json['pressure_mb']?.toInt();
    pressureIn = json['pressure_in']?.toDouble();
    precipMm = json['precip_mm']?.toInt();
    precipIn = json['precip_in']?.toInt();
    humidity = json['humidity']?.toInt();
    cloud = json['cloud']?.toInt();
    feelslikeC = json['feelslike_c']?.toDouble();
    feelslikeF = json['feelslike_f']?.toInt();
    windchillC = json['windchill_c']?.toDouble();
    windchillF = json['windchill_f']?.toDouble();
    heatindexC = json['heatindex_c']?.toDouble();
    heatindexF = json['heatindex_f']?.toInt();
    dewpointC = json['dewpoint_c']?.toDouble();
    dewpointF = json['dewpoint_f']?.toInt();
    willItRain = json['will_it_rain']?.toInt();
    chanceOfRain = json['chance_of_rain']?.toInt();
    willItSnow = json['will_it_snow']?.toInt();
    chanceOfSnow = json['chance_of_snow']?.toInt();
    visKm = json['vis_km']?.toInt();
    visMiles = json['vis_miles']?.toInt();
    gustMph = json['gust_mph']?.toDouble();
    gustKph = json['gust_kph']?.toDouble();
    uv = json['uv']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['time_epoch'] = timeEpoch;
    data['time'] = time;
    data['temp_c'] = tempC;
    data['temp_f'] = tempF;
    data['is_day'] = isDay;
    if (condition != null) {
      data['condition'] = condition!.toJson();
    }
    data['wind_mph'] = windMph;
    data['wind_kph'] = windKph;
    data['wind_degree'] = windDegree;
    data['wind_dir'] = windDir;
    data['pressure_mb'] = pressureMb;
    data['pressure_in'] = pressureIn;
    data['precip_mm'] = precipMm;
    data['precip_in'] = precipIn;
    data['humidity'] = humidity;
    data['cloud'] = cloud;
    data['feelslike_c'] = feelslikeC;
    data['feelslike_f'] = feelslikeF;
    data['windchill_c'] = windchillC;
    data['windchill_f'] = windchillF;
    data['heatindex_c'] = heatindexC;
    data['heatindex_f'] = heatindexF;
    data['dewpoint_c'] = dewpointC;
    data['dewpoint_f'] = dewpointF;
    data['will_it_rain'] = willItRain;
    data['chance_of_rain'] = chanceOfRain;
    data['will_it_snow'] = willItSnow;
    data['chance_of_snow'] = chanceOfSnow;
    data['vis_km'] = visKm;
    data['vis_miles'] = visMiles;
    data['gust_mph'] = gustMph;
    data['gust_kph'] = gustKph;
    data['uv'] = uv;
    return data;
  }
}

class WeatherForecastForecastdayAstro {
/*
{
  "sunrise": "05:36 AM",
  "sunset": "06:11 PM",
  "moonrise": "04:29 PM",
  "moonset": "01:50 AM",
  "moon_phase": "Waxing Gibbous",
  "moon_illumination": "80"
}
*/

  String? sunrise;
  String? sunset;
  String? moonrise;
  String? moonset;
  String? moonPhase;
  String? moonIllumination;

  WeatherForecastForecastdayAstro({
    this.sunrise,
    this.sunset,
    this.moonrise,
    this.moonset,
    this.moonPhase,
    this.moonIllumination,
  });
  WeatherForecastForecastdayAstro.fromJson(Map<String, dynamic> json) {
    sunrise = json['sunrise']?.toString();
    sunset = json['sunset']?.toString();
    moonrise = json['moonrise']?.toString();
    moonset = json['moonset']?.toString();
    moonPhase = json['moon_phase']?.toString();
    moonIllumination = json['moon_illumination']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['sunrise'] = sunrise;
    data['sunset'] = sunset;
    data['moonrise'] = moonrise;
    data['moonset'] = moonset;
    data['moon_phase'] = moonPhase;
    data['moon_illumination'] = moonIllumination;
    return data;
  }
}

class WeatherForecastForecastdayDayCondition {
/*
{
  "text": "Sunny",
  "icon": "//cdn.weatherapi.com/weather/64x64/day/113.png",
  "code": 1000
}
*/

  String? text;
  String? icon;
  int? code;

  WeatherForecastForecastdayDayCondition({
    this.text,
    this.icon,
    this.code,
  });
  WeatherForecastForecastdayDayCondition.fromJson(Map<String, dynamic> json) {
    text = json['text']?.toString();
    icon = json['icon']?.toString();
    code = json['code']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['text'] = text;
    data['icon'] = icon;
    data['code'] = code;
    return data;
  }
}

class WeatherForecastForecastdayDay {
/*
{
  "maxtemp_c": 37,
  "mintemp_c": 23.9,
  "avgtemp_c": 29,
  "avghumidity": 54,
  "daily_will_it_rain": 0,
  "daily_chance_of_rain": 0,
  "daily_will_it_snow": 0,
  "daily_chance_of_snow": 0,
  "condition": {
    "text": "Sunny",
    "icon": "//cdn.weatherapi.com/weather/64x64/day/113.png",
    "code": 1000
  }
}
*/

  int? maxtempC;
  double? mintempC;
  int? avgtempC;
  int? avghumidity;
  int? dailyWillItRain;
  int? dailyChanceOfRain;
  int? dailyWillItSnow;
  int? dailyChanceOfSnow;
  WeatherForecastForecastdayDayCondition? condition;

  WeatherForecastForecastdayDay({
    this.maxtempC,
    this.mintempC,
    this.avgtempC,
    this.avghumidity,
    this.dailyWillItRain,
    this.dailyChanceOfRain,
    this.dailyWillItSnow,
    this.dailyChanceOfSnow,
    this.condition,
  });
  WeatherForecastForecastdayDay.fromJson(Map<String, dynamic> json) {
    maxtempC = json['maxtemp_c']?.toInt();
    mintempC = json['mintemp_c']?.toDouble();
    avgtempC = json['avgtemp_c']?.toInt();
    avghumidity = json['avghumidity']?.toInt();
    dailyWillItRain = json['daily_will_it_rain']?.toInt();
    dailyChanceOfRain = json['daily_chance_of_rain']?.toInt();
    dailyWillItSnow = json['daily_will_it_snow']?.toInt();
    dailyChanceOfSnow = json['daily_chance_of_snow']?.toInt();
    condition = (json['condition'] != null) ? WeatherForecastForecastdayDayCondition.fromJson(json['condition']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['maxtemp_c'] = maxtempC;
    data['mintemp_c'] = mintempC;
    data['avgtemp_c'] = avgtempC;
    data['avghumidity'] = avghumidity;
    data['daily_will_it_rain'] = dailyWillItRain;
    data['daily_chance_of_rain'] = dailyChanceOfRain;
    data['daily_will_it_snow'] = dailyWillItSnow;
    data['daily_chance_of_snow'] = dailyChanceOfSnow;
    if (condition != null) {
      data['condition'] = condition!.toJson();
    }
    return data;
  }
}

class WeatherForecastForecastday {
/*
{
  "date": "2022-09-07",
  "date_epoch": 1662508800,
  "day": {
    "maxtemp_c": 37,
    "mintemp_c": 23.9,
    "avgtemp_c": 29,
    "avghumidity": 54,
    "daily_will_it_rain": 0,
    "daily_chance_of_rain": 0,
    "daily_will_it_snow": 0,
    "daily_chance_of_snow": 0,
    "condition": {
      "text": "Sunny",
      "icon": "//cdn.weatherapi.com/weather/64x64/day/113.png",
      "code": 1000
    }
  },
  "astro": {
    "sunrise": "05:36 AM",
    "sunset": "06:11 PM",
    "moonrise": "04:29 PM",
    "moonset": "01:50 AM",
    "moon_phase": "Waxing Gibbous",
    "moon_illumination": "80"
  },
  "hour": [
    {
      "time_epoch": 1662501600,
      "time": "2022-09-07 00:00",
      "temp_c": 25.7,
      "temp_f": 78.3,
      "is_day": 0,
      "condition": {
        "text": "Clear",
        "icon": "//cdn.weatherapi.com/weather/64x64/night/113.png",
        "code": 1000
      },
      "wind_mph": 9.8,
      "wind_kph": 15.8,
      "wind_degree": 334,
      "wind_dir": "NNW",
      "pressure_mb": 1010,
      "pressure_in": 29.82,
      "precip_mm": 0,
      "precip_in": 0,
      "humidity": 66,
      "cloud": 9,
      "feelslike_c": 27.2,
      "feelslike_f": 81,
      "windchill_c": 25.7,
      "windchill_f": 78.3,
      "heatindex_c": 27.2,
      "heatindex_f": 81,
      "dewpoint_c": 18.9,
      "dewpoint_f": 66,
      "will_it_rain": 0,
      "chance_of_rain": 0,
      "will_it_snow": 0,
      "chance_of_snow": 0,
      "vis_km": 10,
      "vis_miles": 6,
      "gust_mph": 12.3,
      "gust_kph": 19.8,
      "uv": 1
    }
  ]
}
*/

  String? date;
  int? dateEpoch;
  WeatherForecastForecastdayDay? day;
  WeatherForecastForecastdayAstro? astro;
  List<WeatherForecastForecastdayHour?>? hour;

  WeatherForecastForecastday({
    this.date,
    this.dateEpoch,
    this.day,
    this.astro,
    this.hour,
  });
  WeatherForecastForecastday.fromJson(Map<String, dynamic> json) {
    date = json['date']?.toString();
    dateEpoch = json['date_epoch']?.toInt();
    day = (json['day'] != null) ? WeatherForecastForecastdayDay.fromJson(json['day']) : null;
    astro = (json['astro'] != null) ? WeatherForecastForecastdayAstro.fromJson(json['astro']) : null;
    if (json['hour'] != null) {
      final v = json['hour'];
      final arr0 = <WeatherForecastForecastdayHour>[];
      v.forEach((v) {
        arr0.add(WeatherForecastForecastdayHour.fromJson(v));
      });
      hour = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['date'] = date;
    data['date_epoch'] = dateEpoch;
    if (day != null) {
      data['day'] = day!.toJson();
    }
    if (astro != null) {
      data['astro'] = astro!.toJson();
    }
    if (hour != null) {
      final v = hour;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['hour'] = arr0;
    }
    return data;
  }
}

class WeatherForecast {
/*
{
  "forecastday": [
    {
      "date": "2022-09-07",
      "date_epoch": 1662508800,
      "day": {
        "maxtemp_c": 37,
        "mintemp_c": 23.9,
        "avgtemp_c": 29,
        "avghumidity": 54,
        "daily_will_it_rain": 0,
        "daily_chance_of_rain": 0,
        "daily_will_it_snow": 0,
        "daily_chance_of_snow": 0,
        "condition": {
          "text": "Sunny",
          "icon": "//cdn.weatherapi.com/weather/64x64/day/113.png",
          "code": 1000
        }
      },
      "astro": {
        "sunrise": "05:36 AM",
        "sunset": "06:11 PM",
        "moonrise": "04:29 PM",
        "moonset": "01:50 AM",
        "moon_phase": "Waxing Gibbous",
        "moon_illumination": "80"
      },
      "hour": [
        {
          "time_epoch": 1662501600,
          "time": "2022-09-07 00:00",
          "temp_c": 25.7,
          "temp_f": 78.3,
          "is_day": 0,
          "condition": {
            "text": "Clear",
            "icon": "//cdn.weatherapi.com/weather/64x64/night/113.png",
            "code": 1000
          },
          "wind_mph": 9.8,
          "wind_kph": 15.8,
          "wind_degree": 334,
          "wind_dir": "NNW",
          "pressure_mb": 1010,
          "pressure_in": 29.82,
          "precip_mm": 0,
          "precip_in": 0,
          "humidity": 66,
          "cloud": 9,
          "feelslike_c": 27.2,
          "feelslike_f": 81,
          "windchill_c": 25.7,
          "windchill_f": 78.3,
          "heatindex_c": 27.2,
          "heatindex_f": 81,
          "dewpoint_c": 18.9,
          "dewpoint_f": 66,
          "will_it_rain": 0,
          "chance_of_rain": 0,
          "will_it_snow": 0,
          "chance_of_snow": 0,
          "vis_km": 10,
          "vis_miles": 6,
          "gust_mph": 12.3,
          "gust_kph": 19.8,
          "uv": 1
        }
      ]
    }
  ]
}
*/

  late List<WeatherForecastForecastday> forecastday;

  WeatherForecast({
    required this.forecastday,
  });
  WeatherForecast.fromJson(Map<String, dynamic> json) {
    if (json['forecastday'] != null) {
      final v = json['forecastday'];
      final arr0 = <WeatherForecastForecastday>[];
      v.forEach((v) {
        arr0.add(WeatherForecastForecastday.fromJson(v));
      });
      forecastday = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (forecastday != null) {
      final v = forecastday;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['forecastday'] = arr0;
    }
    return data;
  }
}

class WeatherCurrentCondition {
/*
{
  "text": "Sunny",
  "icon": "//cdn.weatherapi.com/weather/64x64/day/113.png",
  "code": 1000
}
*/

  String? text;
  String? icon;
  int? code;

  WeatherCurrentCondition({
    this.text,
    this.icon,
    this.code,
  });
  WeatherCurrentCondition.fromJson(Map<String, dynamic> json) {
    text = json['text']?.toString();
    icon = json['icon']?.toString();
    code = json['code']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['text'] = text;
    data['icon'] = icon;
    data['code'] = code;
    return data;
  }
}

class WeatherCurrent {
/*
{
  "last_updated_epoch": 1662561900,
  "last_updated": "2022-09-07 16:45",
  "temp_c": 36.6,
  "temp_f": 97.9,
  "is_day": 1,
  "condition": {
    "text": "Sunny",
    "icon": "//cdn.weatherapi.com/weather/64x64/day/113.png",
    "code": 1000
  },
  "humidity": 30,
  "cloud": 12,
  "feelslike_c": 37.7
}
*/

  int? lastUpdatedEpoch;
  String? lastUpdated;
  double? tempC;
  double? uv;
  double? wind_kph;
  double? tempF;
  int? isDay;
  WeatherCurrentCondition? condition;
  int? humidity;
  int? cloud;
  double? feelslikeC;

  WeatherCurrent({
    this.lastUpdatedEpoch,
    this.lastUpdated,
    this.tempC,
    this.tempF,
    this.isDay,
    this.condition,
    this.humidity,
    this.cloud,
    this.feelslikeC,
    this.uv,
    this.wind_kph,
  });
  WeatherCurrent.fromJson(Map<String, dynamic> json) {
    lastUpdatedEpoch = json['last_updated_epoch']?.toInt();
    lastUpdated = json['last_updated']?.toString();
    tempC = json['temp_c']?.toDouble();
    tempF = json['temp_f']?.toDouble();
    isDay = json['is_day']?.toInt();
    condition = (json['condition'] != null) ? WeatherCurrentCondition.fromJson(json['condition']) : null;
    humidity = json['humidity']?.toInt();
    cloud = json['cloud']?.toInt();
    feelslikeC = json['feelslike_c']?.toDouble();
    uv =json['uv']?.toDouble();
    wind_kph=json['wind_kph']?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['last_updated_epoch'] = lastUpdatedEpoch;
    data['last_updated'] = lastUpdated;
    data['temp_c'] = tempC;
    data['temp_f'] = tempF;
    data['is_day'] = isDay;
    data['wind_kph'] =wind_kph;
    data['uv']=uv;
    if (condition != null) {
      data['condition'] = condition!.toJson();
    }
    data['humidity'] = humidity;
    data['cloud'] = cloud;
    data['feelslike_c'] = feelslikeC;
    return data;
  }
}

class WeatherLocation {
/*
{
  "name": "Cairo",
  "region": "Al Qahirah",
  "country": "Egypt",
  "lat": 30.05,
  "lon": 31.25,
  "tz_id": "Africa/Cairo",
  "localtime_epoch": 1662562014,
  "localtime": "2022-09-07 16:46"
}
*/

  String? name;
  String? region;
  String? country;
  double? lat;
  double? lon;
  String? tzId;
  int? localtimeEpoch;
  String? localtime;

  WeatherLocation({
    this.name,
    this.region,
    this.country,
    this.lat,
    this.lon,
    this.tzId,
    this.localtimeEpoch,
    this.localtime,
  });
  WeatherLocation.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    region = json['region']?.toString();
    country = json['country']?.toString();
    lat = json['lat']?.toDouble();
    lon = json['lon']?.toDouble();
    tzId = json['tz_id']?.toString();
    localtimeEpoch = json['localtime_epoch']?.toInt();
    localtime = json['localtime']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['region'] = region;
    data['country'] = country;
    data['lat'] = lat;
    data['lon'] = lon;
    data['tz_id'] = tzId;
    data['localtime_epoch'] = localtimeEpoch;
    data['localtime'] = localtime;
    return data;
  }
}

class Weather {
/*
{
  "location": {
    "name": "Cairo",
    "region": "Al Qahirah",
    "country": "Egypt",
    "lat": 30.05,
    "lon": 31.25,
    "tz_id": "Africa/Cairo",
    "localtime_epoch": 1662562014,
    "localtime": "2022-09-07 16:46"
  },
  "current": {
    "last_updated_epoch": 1662561900,
    "last_updated": "2022-09-07 16:45",
    "temp_c": 36.6,
    "temp_f": 97.9,
    "is_day": 1,
    "condition": {
      "text": "Sunny",
      "icon": "//cdn.weatherapi.com/weather/64x64/day/113.png",
      "code": 1000
    },
    "humidity": 30,
    "cloud": 12,
    "feelslike_c": 37.7
    "wind_kph": 25.9,
    "uv": 10,


  },
  "forecast": {
    "forecastday": [
      {
        "date": "2022-09-07",
        "date_epoch": 1662508800,
        "day": {
          "maxtemp_c": 37,
          "mintemp_c": 23.9,
          "avgtemp_c": 29,
          "avghumidity": 54,
          "daily_will_it_rain": 0,
          "daily_chance_of_rain": 0,
          "daily_will_it_snow": 0,
          "daily_chance_of_snow": 0,
          "condition": {
            "text": "Sunny",
            "icon": "//cdn.weatherapi.com/weather/64x64/day/113.png",
            "code": 1000
          }
        },
        "astro": {
          "sunrise": "05:36 AM",
          "sunset": "06:11 PM",
          "moonrise": "04:29 PM",
          "moonset": "01:50 AM",
          "moon_phase": "Waxing Gibbous",
          "moon_illumination": "80"
        },
        "hour": [
          {
            "time_epoch": 1662501600,
            "time": "2022-09-07 00:00",
            "temp_c": 25.7,
            "temp_f": 78.3,
            "is_day": 0,
            "condition": {
              "text": "Clear",
              "icon": "//cdn.weatherapi.com/weather/64x64/night/113.png",
              "code": 1000
            },
            "wind_mph": 9.8,
            "wind_kph": 15.8,
            "wind_degree": 334,
            "wind_dir": "NNW",
            "pressure_mb": 1010,
            "pressure_in": 29.82,
            "precip_mm": 0,
            "precip_in": 0,
            "humidity": 66,
            "cloud": 9,
            "feelslike_c": 27.2,
            "feelslike_f": 81,
            "windchill_c": 25.7,
            "windchill_f": 78.3,
            "heatindex_c": 27.2,
            "heatindex_f": 81,
            "dewpoint_c": 18.9,
            "dewpoint_f": 66,
            "will_it_rain": 0,
            "chance_of_rain": 0,
            "will_it_snow": 0,
            "chance_of_snow": 0,
            "vis_km": 10,
            "vis_miles": 6,
            "gust_mph": 12.3,
            "gust_kph": 19.8,
            "uv": 1
          }
        ]
      }
    ]
  }
}
*/

  WeatherLocation? location;
  WeatherCurrent? current;
  WeatherForecast? forecast;

  Weather({
    this.location,
    this.current,
    this.forecast,
  });
  Weather.fromJson(Map<String, dynamic> json) {
    location = (json['location'] != null) ? WeatherLocation.fromJson(json['location']) : null;
    current = (json['current'] != null) ? WeatherCurrent.fromJson(json['current']) : null;
    forecast = (json['forecast'] != null) ? WeatherForecast.fromJson(json['forecast']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (location != null) {
      data['location'] = location!.toJson();
    }
    if (current != null) {
      data['current'] = current!.toJson();
    }
    if (forecast != null) {
      data['forecast'] = forecast!.toJson();
    }
    return data;
  }
}
